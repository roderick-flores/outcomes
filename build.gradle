plugins {
	id 'java'
	id 'java-library'
	id 'maven-publish'
	id 'signing'
}

// Note: the keyring file is created using:
//     gpg --export-secret-keys -o maven_secring.gpg

repositories {
	// Use Maven Central for resolving dependencies.
	mavenCentral()
}

group = 'com.cynava.outcomes'
version = '0.1.0'

dependencies {
	// Use JUnit Jupiter for testing.
	// Eclipse Public License 1.0: https://junit.org/junit4/license.html
	// https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
	// https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine
	// https://mvnrepository.com/artifact/org.junit.platform/junit-platform-launcher
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: 'latest.release'
	testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: 'latest.release'
	testRuntimeOnly group: 'org.junit.platform', name: 'junit-platform-launcher', version: 'latest.release'

	// Apache Commons Math Library
	// Apache License 2.0: https://www.apache.org/licenses/LICENSE-2.0
	// https://mvnrepository.com/artifact/org.apache.commons/commons-math3
	testImplementation group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'

	// Simple facade or abstraction for various logging frameworks
	// MIT License: http://www.slf4j.org/license.html
	// https://mvnrepository.com/artifact/org.slf4j/slf4j-api
	implementation group: 'org.slf4j', name: 'slf4j-api', version: 'latest.release'

	// The logback-classic module can be assimilated to a significantly
	// improved version of log4j 1.x.
	// Eclipse Public License 1.0 http://www.eclipse.org/legal/epl-v10.html
	// https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
	implementation group: 'ch.qos.logback', name: 'logback-classic', version: 'latest.release'

	// Successor to the popular log4j project
	// Eclipse Public License 1.0 http://www.eclipse.org/legal/epl-v10.html
	// https://mvnrepository.com/artifact/ch.qos.logback/logback-core
	implementation group: 'ch.qos.logback', name: 'logback-core', version: 'latest.release'
}

tasks.named('test') {
	// Use JUnit Platform for unit tests.
	useJUnitPlatform()

	maxHeapSize = '2G'
	maxParallelForks = 8
}

java {
	withJavadocJar()
	withSourcesJar()
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			groupId = 'com.cynava.outcomes'
			artifactId = 'cynava-outcomes'
			version = '0.1.0'

			from components.java

			versionMapping {
				usage('java-api') {
					fromResolutionOf('runtimeClasspath')
				}
				usage('java-runtime') {
					fromResolutionResult()
				}
			}

			pom {
				name = 'cynava-outcomes'
				description = 'A concise description of my library'
				licenses {
					license {
						name = 'The Apache License, Version 2.0'
						url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
					}
				}
				scm {
					connection = 'scm:git:git://github.com/roderick-flores/outcomes'
					developerConnection = 'scm:git:ssh://github.com/roderick-flores/outcomes'
					// scm:git:file://localhost/Users/roderickflores/.m2/repository
				}
			}
		}
	}
}

javadoc {
	if(JavaVersion.current().isJava9Compatible()) {
		options.addBooleanOption('html5', true)
	}
}

signing {
	sign publishing.publications.mavenJava
}